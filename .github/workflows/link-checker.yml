name: "Link Checker"

on:
  pull_request_target:
    paths:
      - '00_–ü—Ä–∞–≤–∏–ª–∞_–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è/**/*.md'
      - '01_–í—Å–µ–ª–µ–Ω–Ω–∞—è/**/*.md'
      - '02_–û–±—ä–µ–∫—Ç—ã/**/*.md'
      - '03_–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞/**/*.md'
      - '04_–ö–æ—Ä–ø–æ—Ä–∞—Ü–∏–∏/**/*.md'
      - '05_–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏/**/*.md'
      - '06_–†–∞—Å—ã/**/*.md'
      - '07_–°—É—â–µ—Å—Ç–≤–∞/**/*.md'
      - '08_–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏/**/*.md'
      - '09_–í–æ–æ—Ä—É–∂–µ–Ω–∏–µ/**/*.md'
      - '10_–Ø–≤–ª–µ–Ω–∏—è/**/*.md'
      - '11_–¢–æ–≤–∞—Ä—ã/**/*.md'
      - '12_–î—Ä—É–≥–æ–µ/**/*.md'
      - '13_–ò—Å—Ç–æ—Ä–∏–∏/**/*.md'
      - '14_–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ—Å—Ç—å/**/*.md'

jobs:
  link-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch PR head branch
        run: |
          git remote add pr "${{ github.event.pull_request.head.repo.clone_url }}"
          git fetch pr "${{ github.event.pull_request.head.ref }}"

      - name: Extract added lines from changed Markdown files
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_REF="${{ github.event.pull_request.head.ref }}"
          # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –≤–µ—Ç–∫–∏ —Å PR-–≤–µ—Ç–∫–æ–π —Ç–æ–ª—å–∫–æ –¥–ª—è Markdown —Ñ–∞–π–ª–æ–≤
          git diff "$BASE_SHA" "pr/$HEAD_REF" -- "*.md" > diff.txt
          # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∏, –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ PR (–Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å '+' –Ω–æ –Ω–µ —Å '+++')
          grep '^+' diff.txt | grep -v '^+++' > added-links.md
          echo "–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫:"
          cat added-links.md

      - name: Run lychee on added links
        id: run-lychee
        run: |
          if [ ! -s added-links.md ]; then
            echo "No added lines found."
            # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π JSON, —á—Ç–æ–±—ã –¥–∞–ª—å–Ω–µ–π—à–∏–π —à–∞–≥ –º–æ–≥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å
            echo '{"links": []}' > lychee-output.json
          else
            # –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ STDIN –≤ lychee
            cat added-links.md | lychee --output json --dump ./lychee-output.json || echo "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Å—ã–ª–∫–∞–º–∏."
          fi

      - name: Post PR comment with link check results
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const outputFile = './lychee-output.json';
            if (!fs.existsSync(outputFile)) {
              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Å—ã–ª–æ–∫. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Markdown —Ñ–∞–π–ª—ã –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.',
              });
              return;
            }
            const output = JSON.parse(fs.readFileSync(outputFile, 'utf8'));
            if (!output.links || output.links.length === 0) {
              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'üîç –í –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å—Å—ã–ª–æ–∫ –∏–ª–∏ –≤—Å–µ —Å—Å—ã–ª–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.',
              });
              return;
            }
            const failedLinks = output.links.filter(link => link.status !== 'Ok');
            if (failedLinks.length === 0) {
              await github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '‚úÖ –í—Å–µ —Å—Å—ã–ª–∫–∏ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã!',
              });
              return;
            }
            const errorDetails = failedLinks
              .map(link => `- [${link.uri}](${link.uri}) (–§–∞–π–ª: ${link.source}) ‚Üí –°—Ç–∞—Ç—É—Å: ${link.status}`)
              .join('\n');
            const issueComment = `
### –û—Ç—á–µ—Ç –æ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Å—ã–ª–æ–∫
–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ:

${errorDetails}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ —Å–ª–∏—è–Ω–∏–µ–º.
            `;
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: issueComment,
            });
